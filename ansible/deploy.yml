- name: "Deploy Backend & Frontend"
  hosts: all
  vars:
    code_dir: "/usr/share/AircraftOffers"
  tasks:
    - name: "Build Frontend for Production (locally)"
      shell: |
        cd ../frontend
        NODE_ENV="production"
        npm run build
      delegate_to: localhost

    - name: "Stop uwsgi service (if existing)"
      systemd:
        state: stopped
        name: uwsgi
      become_user: root
      become_method: sudo
      become: yes
      ignore_errors: true

    - name: "Stop nginx"
      systemd:
        name: nginx
        state: stopped
      become: true
      become_method: sudo
      become_user: root

    - name: "Remove existing Code directory"
      file:
        path: "{{ code_dir }}"
        state: absent
      become_user: root
      become_method: sudo
      become: yes

    - name: "Create directory for sourcecode"
      file:
        path: "{{ code_dir }}"
        state: directory
        owner: ec2-user
      become_user: root
      become_method: sudo
      become: yes

    - name: "Synchronize Code (using rsync)"
      synchronize:
        src: ../../
        dest: "{{ code_dir }}"

    - name: "Install settings for production environment"
      copy:
        src: "{{ code_dir }}/settings_prod.py"
        dest: "{{ code_dir }}/settings.py"
        remote_src: yes

    - name: "Install python 3 packages"
      pip:
        requirements: "{{ code_dir }}/requirements.txt"
        executable: pip3
      become_user: root
      become_method: sudo
      become: yes

    - name: "Ensure old crontab entries are removed"
      ansible.builtin.cron:
        name: "{{ item }}"
        state: absent
      with_items: ["run crawler", "fetch exchange rates"]

    - name: "Ensure Crawler & Classifier is run every day at 5:00 UTC"
      cron:
        name: "run crawler"
        minute: "0"
        hour: "5"
        job: "cd {{ code_dir }} && python3 job_fetch_offers.py && python3 job_reclassify_offers.py"

    - name: "Ensure Exchange rates are fetched from ECB every day at 16:00 UTC (they are updated usually at 16:00 CET)"
      cron:
        name: "fetch exchange rates"
        minute: "0"
        hour: "16"
        job: "cd {{ code_dir }} && python3 job_update_exchange_rates.py"

    - name: "Change user for frontend dist to nginx"
      file:
        path: "{{ code_dir }}/frontend/dist"
        state: directory
        recurse: yes
        owner: nginx
        group: nginx
        mode: '770'
      become_user: root
      become_method: sudo
      become: yes

    - name: "Make web directory readable for uwsgi user"
      file:
        path: "{{ code_dir }}/web"
        state: directory
        recurse: yes
        owner: uwsgi
        group: nginx
        mode: '770'
      become_user: root
      become_method: sudo
      become: yes

    - name: "Install uwsgi service to serve the API"
      copy:
        src: "{{ code_dir }}/ansible/uwsgi.service"
        dest: /etc/systemd/system/
        remote_src: yes
      become_user: root
      become_method: sudo
      become: yes

    - name: "Make sure the socket location directory is present (/run/aero-offers/)"
      file:
        path: /run/aero-offers
        state: directory
        owner: uwsgi
        group: nginx

    - name: "Make sure web directory can be read by uwsgi"
      ansible.builtin.file:
        path: "{{ code_dir }}/web"
        state: directory
        recurse: yes
        owner: uwsgi
        group: nginx

    - name: "Start uwsgi service to serve API"
      systemd:
        state: started
        name: uwsgi
      become_user: root
      become_method: sudo
      become: yes

    - name: "Reload nginx"
      systemd:
        name: nginx
        state: reloaded
      become: true
      become_method: sudo
      become_user: root